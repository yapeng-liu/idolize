// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: school/v1/school.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskType int32

const (
	TaskType_TASK_DAILY         TaskType = 0 //日常任务
	TaskType_TASK_DEVELOPMENTAL TaskType = 1 //成长任务
	TaskType_TASK_TIME_LIMITED  TaskType = 2 //限时任务
)

// Enum value maps for TaskType.
var (
	TaskType_name = map[int32]string{
		0: "TASK_DAILY",
		1: "TASK_DEVELOPMENTAL",
		2: "TASK_TIME_LIMITED",
	}
	TaskType_value = map[string]int32{
		"TASK_DAILY":         0,
		"TASK_DEVELOPMENTAL": 1,
		"TASK_TIME_LIMITED":  2,
	}
)

func (x TaskType) Enum() *TaskType {
	p := new(TaskType)
	*p = x
	return p
}

func (x TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_school_v1_school_proto_enumTypes[0].Descriptor()
}

func (TaskType) Type() protoreflect.EnumType {
	return &file_school_v1_school_proto_enumTypes[0]
}

func (x TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskType.Descriptor instead.
func (TaskType) EnumDescriptor() ([]byte, []int) {
	return file_school_v1_school_proto_rawDescGZIP(), []int{0}
}

type TaskUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId int64 `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	UserId   int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *TaskUserListReq) Reset() {
	*x = TaskUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_school_v1_school_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskUserListReq) ProtoMessage() {}

func (x *TaskUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_school_v1_school_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskUserListReq.ProtoReflect.Descriptor instead.
func (*TaskUserListReq) Descriptor() ([]byte, []int) {
	return file_school_v1_school_proto_rawDescGZIP(), []int{0}
}

func (x *TaskUserListReq) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *TaskUserListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type TaskUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskType          TaskType `protobuf:"varint,1,opt,name=task_type,json=taskType,proto3,enum=api.school.v1.TaskType" json:"task_type,omitempty"`
	Name              string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description       string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Score             int32    `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
	Status            int32    `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	CompletedCount    int32    `protobuf:"varint,6,opt,name=completed_count,json=completedCount,proto3" json:"completed_count,omitempty"`
	TotalCount        int32    `protobuf:"varint,7,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	TaskConditionTime int64    `protobuf:"varint,8,opt,name=task_condition_time,json=taskConditionTime,proto3" json:"task_condition_time,omitempty"`
}

func (x *TaskUser) Reset() {
	*x = TaskUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_school_v1_school_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskUser) ProtoMessage() {}

func (x *TaskUser) ProtoReflect() protoreflect.Message {
	mi := &file_school_v1_school_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskUser.ProtoReflect.Descriptor instead.
func (*TaskUser) Descriptor() ([]byte, []int) {
	return file_school_v1_school_proto_rawDescGZIP(), []int{1}
}

func (x *TaskUser) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_TASK_DAILY
}

func (x *TaskUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskUser) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskUser) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *TaskUser) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TaskUser) GetCompletedCount() int32 {
	if x != nil {
		return x.CompletedCount
	}
	return 0
}

func (x *TaskUser) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *TaskUser) GetTaskConditionTime() int64 {
	if x != nil {
		return x.TaskConditionTime
	}
	return 0
}

type TaskUserListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score        int32       `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	TaskUserList []*TaskUser `protobuf:"bytes,2,rep,name=taskUserList,proto3" json:"taskUserList,omitempty"`
}

func (x *TaskUserListReply) Reset() {
	*x = TaskUserListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_school_v1_school_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskUserListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskUserListReply) ProtoMessage() {}

func (x *TaskUserListReply) ProtoReflect() protoreflect.Message {
	mi := &file_school_v1_school_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskUserListReply.ProtoReflect.Descriptor instead.
func (*TaskUserListReply) Descriptor() ([]byte, []int) {
	return file_school_v1_school_proto_rawDescGZIP(), []int{2}
}

func (x *TaskUserListReply) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *TaskUserListReply) GetTaskUserList() []*TaskUser {
	if x != nil {
		return x.TaskUserList
	}
	return nil
}

type TaskManageListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId int64 `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *TaskManageListReq) Reset() {
	*x = TaskManageListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_school_v1_school_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskManageListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskManageListReq) ProtoMessage() {}

func (x *TaskManageListReq) ProtoReflect() protoreflect.Message {
	mi := &file_school_v1_school_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskManageListReq.ProtoReflect.Descriptor instead.
func (*TaskManageListReq) Descriptor() ([]byte, []int) {
	return file_school_v1_school_proto_rawDescGZIP(), []int{3}
}

func (x *TaskManageListReq) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type TaskManage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskType      TaskType `protobuf:"varint,1,opt,name=task_type,json=taskType,proto3,enum=api.school.v1.TaskType" json:"task_type,omitempty"`
	Name          string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Score         int32    `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
	TaskCondition int32    `protobuf:"varint,5,opt,name=task_condition,json=taskCondition,proto3" json:"task_condition,omitempty"`
}

func (x *TaskManage) Reset() {
	*x = TaskManage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_school_v1_school_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskManage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskManage) ProtoMessage() {}

func (x *TaskManage) ProtoReflect() protoreflect.Message {
	mi := &file_school_v1_school_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskManage.ProtoReflect.Descriptor instead.
func (*TaskManage) Descriptor() ([]byte, []int) {
	return file_school_v1_school_proto_rawDescGZIP(), []int{4}
}

func (x *TaskManage) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_TASK_DAILY
}

func (x *TaskManage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskManage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskManage) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *TaskManage) GetTaskCondition() int32 {
	if x != nil {
		return x.TaskCondition
	}
	return 0
}

type TaskManageListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskManageList []*TaskManage `protobuf:"bytes,1,rep,name=taskManageList,proto3" json:"taskManageList,omitempty"`
}

func (x *TaskManageListReply) Reset() {
	*x = TaskManageListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_school_v1_school_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskManageListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskManageListReply) ProtoMessage() {}

func (x *TaskManageListReply) ProtoReflect() protoreflect.Message {
	mi := &file_school_v1_school_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskManageListReply.ProtoReflect.Descriptor instead.
func (*TaskManageListReply) Descriptor() ([]byte, []int) {
	return file_school_v1_school_proto_rawDescGZIP(), []int{5}
}

func (x *TaskManageListReply) GetTaskManageList() []*TaskManage {
	if x != nil {
		return x.TaskManageList
	}
	return nil
}

type TaskCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId      int64    `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	TaskType      TaskType `protobuf:"varint,2,opt,name=task_type,json=taskType,proto3,enum=api.school.v1.TaskType" json:"task_type,omitempty"`
	Repeat        string   `protobuf:"bytes,3,opt,name=repeat,proto3" json:"repeat,omitempty"`
	StartTime     string   `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       string   `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Participants  string   `protobuf:"bytes,6,opt,name=participants,proto3" json:"participants,omitempty"`
	TriggerEvent  string   `protobuf:"bytes,7,opt,name=trigger_event,json=triggerEvent,proto3" json:"trigger_event,omitempty"`
	TotalCount    int32    `protobuf:"varint,8,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Name          string   `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	Description   string   `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	Score         int32    `protobuf:"varint,11,opt,name=score,proto3" json:"score,omitempty"`
	TaskCondition int32    `protobuf:"varint,12,opt,name=task_condition,json=taskCondition,proto3" json:"task_condition,omitempty"`
}

func (x *TaskCreateReq) Reset() {
	*x = TaskCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_school_v1_school_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCreateReq) ProtoMessage() {}

func (x *TaskCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_school_v1_school_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCreateReq.ProtoReflect.Descriptor instead.
func (*TaskCreateReq) Descriptor() ([]byte, []int) {
	return file_school_v1_school_proto_rawDescGZIP(), []int{6}
}

func (x *TaskCreateReq) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *TaskCreateReq) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_TASK_DAILY
}

func (x *TaskCreateReq) GetRepeat() string {
	if x != nil {
		return x.Repeat
	}
	return ""
}

func (x *TaskCreateReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TaskCreateReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *TaskCreateReq) GetParticipants() string {
	if x != nil {
		return x.Participants
	}
	return ""
}

func (x *TaskCreateReq) GetTriggerEvent() string {
	if x != nil {
		return x.TriggerEvent
	}
	return ""
}

func (x *TaskCreateReq) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *TaskCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskCreateReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskCreateReq) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *TaskCreateReq) GetTaskCondition() int32 {
	if x != nil {
		return x.TaskCondition
	}
	return 0
}

type TaskCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskManageId int64 `protobuf:"varint,1,opt,name=task_manage_id,json=taskManageId,proto3" json:"task_manage_id,omitempty"`
}

func (x *TaskCreateReply) Reset() {
	*x = TaskCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_school_v1_school_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCreateReply) ProtoMessage() {}

func (x *TaskCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_school_v1_school_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCreateReply.ProtoReflect.Descriptor instead.
func (*TaskCreateReply) Descriptor() ([]byte, []int) {
	return file_school_v1_school_proto_rawDescGZIP(), []int{7}
}

func (x *TaskCreateReply) GetTaskManageId() int64 {
	if x != nil {
		return x.TaskManageId
	}
	return 0
}

type TaskDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskManageId int64 `protobuf:"varint,1,opt,name=task_manage_id,json=taskManageId,proto3" json:"task_manage_id,omitempty"`
	ServerId     int64 `protobuf:"varint,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *TaskDeleteReq) Reset() {
	*x = TaskDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_school_v1_school_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDeleteReq) ProtoMessage() {}

func (x *TaskDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_school_v1_school_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDeleteReq.ProtoReflect.Descriptor instead.
func (*TaskDeleteReq) Descriptor() ([]byte, []int) {
	return file_school_v1_school_proto_rawDescGZIP(), []int{8}
}

func (x *TaskDeleteReq) GetTaskManageId() int64 {
	if x != nil {
		return x.TaskManageId
	}
	return 0
}

func (x *TaskDeleteReq) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type TaskDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskDeleteReply) Reset() {
	*x = TaskDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_school_v1_school_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDeleteReply) ProtoMessage() {}

func (x *TaskDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_school_v1_school_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDeleteReply.ProtoReflect.Descriptor instead.
func (*TaskDeleteReply) Descriptor() ([]byte, []int) {
	return file_school_v1_school_proto_rawDescGZIP(), []int{9}
}

type TaskModifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskManageId  int64    `protobuf:"varint,1,opt,name=task_manage_id,json=taskManageId,proto3" json:"task_manage_id,omitempty"`
	TaskType      TaskType `protobuf:"varint,2,opt,name=task_type,json=taskType,proto3,enum=api.school.v1.TaskType" json:"task_type,omitempty"`
	Repeat        string   `protobuf:"bytes,3,opt,name=repeat,proto3" json:"repeat,omitempty"`
	StartTime     string   `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       string   `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Participants  string   `protobuf:"bytes,6,opt,name=participants,proto3" json:"participants,omitempty"`
	TriggerEvent  string   `protobuf:"bytes,7,opt,name=trigger_event,json=triggerEvent,proto3" json:"trigger_event,omitempty"`
	TotalCount    int32    `protobuf:"varint,8,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Name          string   `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	Description   string   `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	Score         int32    `protobuf:"varint,11,opt,name=score,proto3" json:"score,omitempty"`
	TaskCondition int32    `protobuf:"varint,12,opt,name=task_condition,json=taskCondition,proto3" json:"task_condition,omitempty"`
}

func (x *TaskModifyReq) Reset() {
	*x = TaskModifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_school_v1_school_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskModifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskModifyReq) ProtoMessage() {}

func (x *TaskModifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_school_v1_school_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskModifyReq.ProtoReflect.Descriptor instead.
func (*TaskModifyReq) Descriptor() ([]byte, []int) {
	return file_school_v1_school_proto_rawDescGZIP(), []int{10}
}

func (x *TaskModifyReq) GetTaskManageId() int64 {
	if x != nil {
		return x.TaskManageId
	}
	return 0
}

func (x *TaskModifyReq) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_TASK_DAILY
}

func (x *TaskModifyReq) GetRepeat() string {
	if x != nil {
		return x.Repeat
	}
	return ""
}

func (x *TaskModifyReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TaskModifyReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *TaskModifyReq) GetParticipants() string {
	if x != nil {
		return x.Participants
	}
	return ""
}

func (x *TaskModifyReq) GetTriggerEvent() string {
	if x != nil {
		return x.TriggerEvent
	}
	return ""
}

func (x *TaskModifyReq) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *TaskModifyReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskModifyReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskModifyReq) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *TaskModifyReq) GetTaskCondition() int32 {
	if x != nil {
		return x.TaskCondition
	}
	return 0
}

type TaskModifyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskModifyReply) Reset() {
	*x = TaskModifyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_school_v1_school_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskModifyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskModifyReply) ProtoMessage() {}

func (x *TaskModifyReply) ProtoReflect() protoreflect.Message {
	mi := &file_school_v1_school_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskModifyReply.ProtoReflect.Descriptor instead.
func (*TaskModifyReply) Descriptor() ([]byte, []int) {
	return file_school_v1_school_proto_rawDescGZIP(), []int{11}
}

type TaskStatusSetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskManageId int64 `protobuf:"varint,1,opt,name=task_manage_id,json=taskManageId,proto3" json:"task_manage_id,omitempty"`
	ServerId     int64 `protobuf:"varint,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	TaskStatus   int32 `protobuf:"varint,3,opt,name=task_status,json=taskStatus,proto3" json:"task_status,omitempty"`
}

func (x *TaskStatusSetReq) Reset() {
	*x = TaskStatusSetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_school_v1_school_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskStatusSetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatusSetReq) ProtoMessage() {}

func (x *TaskStatusSetReq) ProtoReflect() protoreflect.Message {
	mi := &file_school_v1_school_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatusSetReq.ProtoReflect.Descriptor instead.
func (*TaskStatusSetReq) Descriptor() ([]byte, []int) {
	return file_school_v1_school_proto_rawDescGZIP(), []int{12}
}

func (x *TaskStatusSetReq) GetTaskManageId() int64 {
	if x != nil {
		return x.TaskManageId
	}
	return 0
}

func (x *TaskStatusSetReq) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *TaskStatusSetReq) GetTaskStatus() int32 {
	if x != nil {
		return x.TaskStatus
	}
	return 0
}

type TaskStatusSetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskStatusSetReply) Reset() {
	*x = TaskStatusSetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_school_v1_school_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskStatusSetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatusSetReply) ProtoMessage() {}

func (x *TaskStatusSetReply) ProtoReflect() protoreflect.Message {
	mi := &file_school_v1_school_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatusSetReply.ProtoReflect.Descriptor instead.
func (*TaskStatusSetReply) Descriptor() ([]byte, []int) {
	return file_school_v1_school_proto_rawDescGZIP(), []int{13}
}

var File_school_v1_school_proto protoreflect.FileDescriptor

var file_school_v1_school_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9e,
	0x02, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x09, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2e, 0x0a, 0x13, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x74, 0x61,
	0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x66, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x74, 0x61,
	0x73, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x0a, 0x54, 0x61,
	0x73, 0x6b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x58, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x74, 0x61, 0x73,
	0x6b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x91, 0x03, 0x0a, 0x0d,
	0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x37, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f,
	0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x9a, 0x03, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74,
	0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x11, 0x0a, 0x0f,
	0x54, 0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x76, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x61, 0x73,
	0x6b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2a, 0x49, 0x0a,
	0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x41, 0x53,
	0x4b, 0x5f, 0x44, 0x41, 0x49, 0x4c, 0x59, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x41, 0x53,
	0x4b, 0x5f, 0x44, 0x45, 0x56, 0x45, 0x4c, 0x4f, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x4c, 0x10,
	0x01, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4c,
	0x49, 0x4d, 0x49, 0x54, 0x45, 0x44, 0x10, 0x02, 0x32, 0xe1, 0x05, 0x0a, 0x06, 0x53, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x12, 0x75, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f,
	0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65,
	0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x7d, 0x0a, 0x0e, 0x54, 0x61,
	0x73, 0x6b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x63, 0x69, 0x72,
	0x63, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x2f, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x74, 0x0a, 0x0a, 0x54, 0x61, 0x73,
	0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a,
	0x22, 0x1d, 0x2f, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x69, 0x72,
	0x63, 0x6c, 0x65, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x71, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1f, 0x2a, 0x1d, 0x2f, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x74, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x1a, 0x1d, 0x2f, 0x63, 0x69, 0x72, 0x63,
	0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x2f, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x81, 0x01, 0x0a, 0x0d, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x1a, 0x21, 0x2f, 0x63, 0x69, 0x72, 0x63,
	0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x2f, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x74, 0x42, 0x2a, 0x0a, 0x0d,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a,
	0x17, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_school_v1_school_proto_rawDescOnce sync.Once
	file_school_v1_school_proto_rawDescData = file_school_v1_school_proto_rawDesc
)

func file_school_v1_school_proto_rawDescGZIP() []byte {
	file_school_v1_school_proto_rawDescOnce.Do(func() {
		file_school_v1_school_proto_rawDescData = protoimpl.X.CompressGZIP(file_school_v1_school_proto_rawDescData)
	})
	return file_school_v1_school_proto_rawDescData
}

var file_school_v1_school_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_school_v1_school_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_school_v1_school_proto_goTypes = []interface{}{
	(TaskType)(0),               // 0: api.school.v1.TaskType
	(*TaskUserListReq)(nil),     // 1: api.school.v1.TaskUserListReq
	(*TaskUser)(nil),            // 2: api.school.v1.TaskUser
	(*TaskUserListReply)(nil),   // 3: api.school.v1.TaskUserListReply
	(*TaskManageListReq)(nil),   // 4: api.school.v1.TaskManageListReq
	(*TaskManage)(nil),          // 5: api.school.v1.TaskManage
	(*TaskManageListReply)(nil), // 6: api.school.v1.TaskManageListReply
	(*TaskCreateReq)(nil),       // 7: api.school.v1.TaskCreateReq
	(*TaskCreateReply)(nil),     // 8: api.school.v1.TaskCreateReply
	(*TaskDeleteReq)(nil),       // 9: api.school.v1.TaskDeleteReq
	(*TaskDeleteReply)(nil),     // 10: api.school.v1.TaskDeleteReply
	(*TaskModifyReq)(nil),       // 11: api.school.v1.TaskModifyReq
	(*TaskModifyReply)(nil),     // 12: api.school.v1.TaskModifyReply
	(*TaskStatusSetReq)(nil),    // 13: api.school.v1.TaskStatusSetReq
	(*TaskStatusSetReply)(nil),  // 14: api.school.v1.TaskStatusSetReply
}
var file_school_v1_school_proto_depIdxs = []int32{
	0,  // 0: api.school.v1.TaskUser.task_type:type_name -> api.school.v1.TaskType
	2,  // 1: api.school.v1.TaskUserListReply.taskUserList:type_name -> api.school.v1.TaskUser
	0,  // 2: api.school.v1.TaskManage.task_type:type_name -> api.school.v1.TaskType
	5,  // 3: api.school.v1.TaskManageListReply.taskManageList:type_name -> api.school.v1.TaskManage
	0,  // 4: api.school.v1.TaskCreateReq.task_type:type_name -> api.school.v1.TaskType
	0,  // 5: api.school.v1.TaskModifyReq.task_type:type_name -> api.school.v1.TaskType
	1,  // 6: api.school.v1.School.TaskUserList:input_type -> api.school.v1.TaskUserListReq
	4,  // 7: api.school.v1.School.TaskManageList:input_type -> api.school.v1.TaskManageListReq
	7,  // 8: api.school.v1.School.TaskCreate:input_type -> api.school.v1.TaskCreateReq
	9,  // 9: api.school.v1.School.TaskDelete:input_type -> api.school.v1.TaskDeleteReq
	11, // 10: api.school.v1.School.TaskModify:input_type -> api.school.v1.TaskModifyReq
	13, // 11: api.school.v1.School.TaskStatusSet:input_type -> api.school.v1.TaskStatusSetReq
	3,  // 12: api.school.v1.School.TaskUserList:output_type -> api.school.v1.TaskUserListReply
	6,  // 13: api.school.v1.School.TaskManageList:output_type -> api.school.v1.TaskManageListReply
	8,  // 14: api.school.v1.School.TaskCreate:output_type -> api.school.v1.TaskCreateReply
	10, // 15: api.school.v1.School.TaskDelete:output_type -> api.school.v1.TaskDeleteReply
	12, // 16: api.school.v1.School.TaskModify:output_type -> api.school.v1.TaskModifyReply
	14, // 17: api.school.v1.School.TaskStatusSet:output_type -> api.school.v1.TaskStatusSetReply
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_school_v1_school_proto_init() }
func file_school_v1_school_proto_init() {
	if File_school_v1_school_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_school_v1_school_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_school_v1_school_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_school_v1_school_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskUserListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_school_v1_school_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskManageListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_school_v1_school_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskManage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_school_v1_school_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskManageListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_school_v1_school_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_school_v1_school_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_school_v1_school_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_school_v1_school_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_school_v1_school_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskModifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_school_v1_school_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskModifyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_school_v1_school_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskStatusSetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_school_v1_school_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskStatusSetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_school_v1_school_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_school_v1_school_proto_goTypes,
		DependencyIndexes: file_school_v1_school_proto_depIdxs,
		EnumInfos:         file_school_v1_school_proto_enumTypes,
		MessageInfos:      file_school_v1_school_proto_msgTypes,
	}.Build()
	File_school_v1_school_proto = out.File
	file_school_v1_school_proto_rawDesc = nil
	file_school_v1_school_proto_goTypes = nil
	file_school_v1_school_proto_depIdxs = nil
}
